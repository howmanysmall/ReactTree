"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[256],{81571:e=>{e.exports=JSON.parse('{"functions":[{"name":"mount","desc":"Used to mount a React element into the Roblox instance tree.\\n\\nCreates a Roblox Instance given a Roact element, and optionally a\\n`parent` to put it in, and a `key` to use as the instance\'s `Name`.\\n\\nThe return result is an [IReactHandle], which can be used to unmount\\nthe element later using [ReactTree.unmount].","params":[{"name":"element","desc":"The React element to mount. This is the return result of `React.createElement`.","lua_type":"any"},{"name":"parent?","desc":"Where you want to mount the tree to.","lua_type":"Instance"},{"name":"key?","desc":"The key of the element. Essentially just [Instance.Name].","lua_type":"string"}],"returns":[{"desc":"The handle to the mounted element.","lua_type":"IReactHandle"}],"function_type":"static","source":{"line":55,"path":"src/init.lua"}},{"name":"unmount","desc":"Unmounts an element that was mounted with [ReactTree.mount].","params":[{"name":"reactHandle","desc":"The handle to unmount.","lua_type":"IReactHandle"}],"returns":[],"function_type":"static","source":{"line":116,"path":"src/init.lua"}},{"name":"update","desc":"Updates an existing instance handle with a new element, returning\\nthe same handle. This can be used to update a UI created with\\n[ReactTree.mount] by passing in a new element with new props.\\n\\n:::warning\\nThis is really not recommended to use, it\'s extremely slow\\nand can cause major performance issues. Find a better way\\nto handle your trees.\\n:::","params":[{"name":"reactHandle","desc":"The handle to update.","lua_type":"IReactHandle"},{"name":"element","desc":"The new element to update the handle with. This is the return result of `React.createElement`.","lua_type":"any"}],"returns":[{"desc":"The same handle that was passed in.","lua_type":"IReactHandle"}],"function_type":"static","source":{"line":145,"path":"src/init.lua"}}],"properties":[{"name":"StrictValidation","desc":"Whether or not to perform strict validation on the React tree.","lua_type":"boolean","source":{"line":23,"path":"src/init.lua"}}],"types":[{"name":"IReactHandle","desc":"This is what is returned when you call [ReactTree.mount], and it\\nis used for unmounting with [ReactTree.unmount].","fields":[{"name":"key","lua_type":"number | string","desc":"The key of the element."},{"name":"parent","lua_type":"Instance?","desc":"The parent of the element."},{"name":"root","lua_type":"any","desc":"The root of the element. This is the return result of `React.createElement`."}],"source":{"line":35,"path":"src/init.lua"}}],"name":"ReactTree","desc":"A utility library that allows Roact styled mounting and unmounting for React.","source":{"line":16,"path":"src/init.lua"}}')}}]);